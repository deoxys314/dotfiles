" {{{ Key and Command Mappings

" cd to :head of :path
nnoremap <Leader>cd :cd %:p:h<CR>

" remove trailing whitespace
nnoremap <Leader>w :call whitespace#TrimWhitespace()<CR>

" go to next misspelled word and suggest
nnoremap <Leader>s ]Sz=
nnoremap <Leader>S [Sz=

" I don't like Ex mode
nnoremap Q <nop>

" compliment to ZZ and ZQ
nnoremap ZA :w<CR>

" using mouse
set mouse=a

" color options
command! RandomColorScheme call color#RandomColorScheme()
command! NextColorScheme call color#NextColorScheme()
command! PreviousColorScheme call color#PreviousColorScheme()

" comes in handy
command! -bar -range OK <line1>,<line2>call insert#InsertAtLineEnd('OK')
nnoremap <Leader>o :OK<CR>
vnoremap <Leader>o :OK<CR>

" editing prose
command! -bang Prose call prose#initialize()
" }}}

" {{{ Misc Options

" make backspace work the way it dos in most editors
set backspace=indent,eol,start

" UTF-8
set encoding=utf-8

" store a lot of history
set history=1000

" Unix line endings
set fileformat=unix

" no sound, just flash the screen
set visualbell

" Make spell not take over entire screen
set spellsuggest=15

" no modelines: potential security issue
set modelines=0

" sensible printing defaults
set printoptions+=header:0
set printoptions+=syntax:y
set printoptions+=wrap:y

if &diff
	" Makes diff easier to read
	" https://vi.stackexchange.com/a/626
	highlight! link DiffText MatchParen

	" easier to quit both at once in diff mode
	command! Q qall

	" disable linting
	silent! ALEDisable

	set nonumber signcolumn=no
endif

" some settings that can't be done from a ftplugin (or it would be onerous to
" do so)
augroup virmc
	autocmd!
	autocmd BufNewFile,BufRead *.js,*.css,*.htm,*.html,*.php
	  \ setlocal
	  \   autoindent
	  \   fileformat=unix
	  \   foldmethod=indent
	  \   noexpandtab
	  \   shiftwidth=2
	  \   softtabstop=2
	  \   tabstop=2
	autocmd BufNewFile,BufRead !status* cd %:p:h | setlocal spell
	autocmd InsertLeave *.py,*.pyw
	  \ if pumvisible() == 0 && winnr('$') > 1 | pclose | endif
augroup END
" }}}

" {{{ Add this location to the runtimepath
let &runtimepath .= ',' . expand('<sfile>:p:h')
" }}}
